I will be adding reflections for Lesson 3 here
So far I have understood how GitHub works for creating new repositories from my desk.  It is a wonderful concept
to be able to collaborate across the world.

Why would we always want to manually pull changes rather than automatically?
When you do pulls like this, you might accidentally override changes in your own version with what you pull.

Describes differences between forks, clones and branches.  When would you use one instead of another.

Forks are when you want to create a variant of a publicly available project.  This allows both the original creator and the forks to work independently of each other at the same time allowing the credits to the original by way of cross-linking on Git-Hub by maintaining the number of forks against the original.

Clone is to bring the Git-Hub project to one's own computer and work on it.  Fork alone does not give the project to one's desktop.  It merely creates the project under one's own GitHub account.  However, to work on it on one's desktop, one must clone it.

Branch is when multiple people are working on a project or one wants to maintain an experimental etc.  Basically any situation, where you want the main/master to go on unhindered or multiple parallel developments to go on unhindered.  When one is fully convinced about one's changes of good production quality, one will merge with the master or other branches etc.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can always check the situation of difference between the versions of your commits versus the last commits from the remote so that you can determine the right course of action to resolve any potential conflicts and do the merges as appropriate.
How would you collaborate without Git or GitHub?  What would be easier and what would be harder?

Without Git/GitHub, one would have to use some other source code control systems.  However, if all the developers that I collaborate have access to the same source control systems, we can still see the branches and other stuff and make the work still happen.  This would be easier.

However, if I have to collaborate on open source projects with people that I do not know about across the world, it would be very difficult without a centralized system like GitHub and tools like Git that make it easy to keep close watch on the remote vs local copies.

When would you want to make changes in a branch?  What benefits does the approach have?

Whenever the feature I am working on is an experimental thing or whenever multiple people need to work on the same feature without stepping on to each other's toes for a while so that the development can be done in an unobstructed or focussed manner.  This does have the complexities, but the manual resolution has to take place to ensure the final code is what it is intended to be.  It is very advantageous when there is a collaborative team approach, in cutting down the development time, and bring the features to the market quickly.  Also, when you have some features developed in a branch, it becomes infinitely easier to request and receive reviews on the code from others, so the quality of what we deliver can be more assured.